<can-import from="./navigation-panel.less" />

{{< navPanelItem }}
  {{let thisVPIndex = ./vm.visitedPages.indexOf(page)}}
  {{let selectedVPIndex = ./vm.appState.selectedPageIndex}}
  <li class="page-item {{#is(thisVPIndex, selectedVPIndex)}}active-nav-page-item{{/is}}">
    <button
      type="button"
      title="{{./page.display.text}} {{./page.display.repeatVal}}"
      on:keydown="keydownFireClickHandler(scope.event, ./vm.navToPage, scope.index)"
      on:click="./vm.navToPage(scope.index)"
    >
      {{#is(thisVPIndex, selectedVPIndex)}}
        <span class="icon glyphicon-dot-circled" aria-hidden="true"></span>
      {{else}}
        <span class="icon glyphicon-ok-circled" aria-hidden="true"></span>
      {{/is}}
      <span>
        {{./page.display.textRepeatTruncated}}
      </span>
    </button>
  </li>
{{/navPanelItem}}

{{#if(isMobile)}}
  {{#if(mobileOpenToggle)}}
    <a role="button" class="mobile-toggle glyphicon-down-open" on:click="mobileOpenToggle = false" title="close navigation">Close</a>
  {{else}}
    <a role="button" class="mobile-toggle glyphicon-list-bullet" on:click="mobileOpenToggle = true" title="open navigation">Open</a>
  {{/if}}
{{/if}}

<div id="viewer-navigation-panel-form" class="{{#if(mobileAndOpen)}}mobile-open{{else}}{{#if(isMobile)}}mobile-close{{/if}}{{/if}}">
  <span class="nav-header">NAVIGATION PANEL</span>
  <ul id="nav-panel-parent" class="nav-panel">
    {{#for(appState.visitedPages)}}
      {{> navPanelItem getNavPanelPage(scope.index)}}
    {{/for}}
    {{#for(page of appState.futurePages)}}
      <li class="page-item future-page-item">
        <button
          type="button"
          title="{{page.display.text}} {{page.display.repeatVal}}"
        >
          <span class="icon glyphicon-circle-thin" aria-hidden="true"></span>
          <span class="future-page-item">
            {{page.display.textRepeatTruncated}}
          </span>
        </button>
      </li>
    {{/for}}
  </ul>
</div>
